name: Build cimgui Libraries via cmake.yml

on: [workflow_dispatch]

env:
  lib-name: Dear ImGui + Addons
  repo-tag: latest
  output-dir: native
  branch: native-artifacts-branch
  base: master
  reviewers: JunaMeinhold

jobs:
  build-cimgui:
    uses: ./.github/workflows/cmake.yml
    with:
      lib-name: cimgui
      repo: JunaMeinhold/cimgui
      repo-tag: docking_inter
      output-dir: native
      cmake-flags: -DIMGUI_WCHAR32=ON -DIMGUI_FREETYPE=ON
      use-vcpkg: true
      vcpkg-packages: freetype
      bin-name-linux: cimgui.so
      bin-name-linux-normalized: cimgui.so
      bin-name-windows: Release/cimgui.dll
      bin-name-windows-normalized: cimgui.dll
      bin-name-osx: cimgui.dylib
      bin-name-osx-normalized: cimgui.dylib
      bin-name-android: cimgui.so
      bin-name-android-normalized: cimgui.so
      android-api: 23
      create-pr: false
  build-cimplot:
    uses: ./.github/workflows/cmake.yml
    with:
      lib-name: cimplot
      repo: JunaMeinhold/cimplot
      repo-tag: master
      output-dir: native
      cmake-flags: -DIMGUI_WCHAR32=ON -DIMGUI_FREETYPE=ON
      bin-name-linux: cimplot.so
      bin-name-linux-normalized: cimplot.so
      bin-name-windows: Release/cimplot.dll
      bin-name-windows-normalized: cimplot.dll
      bin-name-osx: cimplot.dylib
      bin-name-osx-normalized: cimplot.dylib
      bin-name-android: cimplot.so
      bin-name-android-normalized: cimplot.so
      android-api: 23
      pre-configure-steps: git clone --recursive https://github.com/JunaMeinhold/cimgui.git
      create-pr: false 
  build-cimnodes:
    uses: ./.github/workflows/cmake.yml
    with:
      lib-name: cimnodes
      repo: JunaMeinhold/cimnodes
      repo-tag: master
      output-dir: native
      cmake-flags: -DIMGUI_WCHAR32=ON -DIMGUI_FREETYPE=ON
      bin-name-linux: cimnodes.so
      bin-name-linux-normalized: cimnodes.so
      bin-name-windows: Release/cimnodes.dll
      bin-name-windows-normalized: cimnodes.dll
      bin-name-osx: cimnodes.dylib
      bin-name-osx-normalized: cimnodes.dylib
      bin-name-android: cimnodes.so
      bin-name-android-normalized: cimnodes.so
      android-api: 23
      pre-configure-steps: git clone --recursive https://github.com/JunaMeinhold/cimgui.git
      create-pr: false
  build-cimguizmo:
    uses: ./.github/workflows/cmake.yml
    with:
      lib-name: cimguizmo
      repo: JunaMeinhold/cimguizmo
      repo-tag: master
      output-dir: native
      cmake-flags: -DIMGUI_WCHAR32=ON -DIMGUI_FREETYPE=ON
      bin-name-linux: cimguizmo.so
      bin-name-linux-normalized: cimguizmo.so
      bin-name-windows: Release/cimguizmo.dll
      bin-name-windows-normalized: cimguizmo.dll
      bin-name-osx: cimguizmo.dylib
      bin-name-osx-normalized: cimguizmo.dylib
      bin-name-android: cimguizmo.so
      bin-name-android-normalized: cimguizmo.so
      android-api: 23
      pre-configure-steps: git clone --recursive https://github.com/JunaMeinhold/cimgui.git
      create-pr: false
  create-pr:
    runs-on: ubuntu-latest
    needs: [build-cimgui, build-cimplot, build-cimnodes, build-cimguizmo]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.output-dir }}
      - name: Trim Library Name
        run: |
          cd ${{ env.output-dir }}
          
          for artifact_dir in */; do
            if [ -d "$artifact_dir" ]; then
              artifact_name="${artifact_dir%/}"
              platform="${artifact_name#*-}"
              mv "$artifact_dir*" "$platform/"
            fi
          done
      - name: Create a Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          title: "Update native libraries for ${{ env.lib-name }} to version ${{ env.repo-tag }}"
          body: "This pull request updates the native libraries in the ${{ env.output-dir }} folder to version ${{ env.repo-tag }}."
          commit-message: "chore: update native libraries to version ${{ env.repo-tag }}"
          add-paths: "${{ env.output-dir }}/*"
          branch: ${{ env.branch }}
          base: ${{ env.base }}
          reviewers: ${{ env.reviewers }}
          sign-commits: true
          delete-branch: true
